apply plugin: 'scala'
apply plugin:'application'

import org.gradle.api.tasks.scala.ScalaCompile

repositories {
  mavenCentral()
  ivy {
    url "http://repo.typesafe.com/typesafe/releases/"
    layout "maven"
  }
}

sourceSets {
  main {
    scala {
      srcDirs = ["app"]
    }
  }
}

dependencies { //TODO: clean up
  compile 'org.scala-lang:scala-library:2.10.4'
  runtime "io.netty:netty:3.9.2.Final"
  runtime "com.typesafe.netty:netty-http-pipelining:1.1.2"
  runtime "org.slf4j:slf4j-api:1.7.6"
  runtime "org.slf4j:jul-to-slf4j:1.7.6"
  runtime "org.slf4j:jcl-over-slf4j:1.7.6"
  runtime "ch.qos.logback:logback-core:1.1.1"
  runtime "ch.qos.logback:logback-classic:1.1.1"
  runtime "com.typesafe.akka:akka-actor_2.10:2.3.3"
  runtime "com.typesafe.akka:akka-slf4j_2.10:2.3.3"
  runtime "org.scala-stm:scala-stm_2.10:0.7"
  runtime "commons-codec:commons-codec:1.9"
  runtime "joda-time:joda-time:2.3"
  runtime "org.joda:joda-convert:1.6"
  runtime "org.apache.commons:commons-lang3:3.1"
  runtime "com.fasterxml.jackson.core:jackson-core:2.3.2"
  runtime "com.fasterxml.jackson.core:jackson-annotations:2.3.2"
  runtime "com.fasterxml.jackson.core:jackson-databind:2.3.2"
  runtime "xerces:xercesImpl:2.11.0"
  runtime "javax.transaction:jta:1.1"
  runtime "org.scala-lang:scala-reflect:2.10.4"

  runtime group: 'com.typesafe.play', name: 'build-link', version: '2.3.2'
  runtime group: 'com.typesafe.play', name: 'play-exceptions', version: '2.3.2'
  compile group: 'com.typesafe.play', name: 'play_2.10', version: '2.3.2'
  compile group: 'com.typesafe.play', name: 'routes-compiler_2.10', version: '2.3.2'
  compile 'com.fasterxml.jackson.core:jackson-databind:2.3.2'
  compile group: 'com.typesafe.play', name: 'play-iteratees_2.10', version: '2.3.2'
  //compile group: 'com.typesafe.play', name: 'play-json_2.10', version: '2.3.2'
  compile group: 'com.typesafe.play', name: 'twirl-compiler_2.10', version: '1.0.2'
  compile group: 'com.typesafe.play', name: 'twirl-api_2.10', version: '1.0.2'
}


buildscript {
  repositories {
    mavenCentral()
    ivy {
      url "http://repo.typesafe.com/typesafe/releases/"
      layout "maven"
    }
  }
  
  dependencies {
    classpath "commons-io:commons-io:2.0.1"
    classpath group: 'com.typesafe.play', name: 'play_2.10', version: '2.3.2'
    classpath 'com.fasterxml.jackson.core:jackson-databind:2.3.2'
    classpath group: 'com.typesafe.play', name: 'play-json_2.10', version: '2.3.2'
    classpath group: 'com.typesafe.play', name: 'routes-compiler_2.10', version: '2.3.2'
    classpath group: 'com.typesafe.play', name: 'twirl-compiler_2.10', version: '1.0.2'
    classpath group: 'com.typesafe.play', name: 'twirl-api_2.10', version: '1.0.2'
    classpath files("./groovy-bridge.jar") //silly, but I am just playing around! :) this would be a java project were we do not really need this.. :)
  }
}

tasks.withType(ScalaCompile) {
    scalaCompileOptions.useAnt = false
}


task playGenerateTemplates {
  File outputDir = new File("managed-src") //TODO:properties
  
  //TODO: somewhere else:
  tasks.compileScala.source = tasks.compileScala.getSource() + fileTree("./managed-src/views") //TODO: use generated sources instead

  String additionalImports = "import controllers._"
  String basePath = (new File(".")).getCanonicalPath()
  for (templateFile in fileTree("./app/views/").files) { //TODO: {html,js,text,...}.scala name filter
    File relativeFile = new File("./" + templateFile.getAbsolutePath().replace(basePath, "") + "/")
    compy.TwirlCompiler twirlCompiler = new compy.TwirlCompiler(relativeFile, new File("./app/"), outputDir, "play.twirl.api.HtmlFormat", additionalImports, "utf-8", false, false)
    twirlCompiler.execute()
  }
  sourceSets.main.scala.srcDirs += outputDir.getPath()
}


task playRoutes { //TODO rename?
  File outputDir = new File("managed-src")
  String basePath = (new File(".")).getCanonicalPath()
  tasks.compileScala.source =  tasks.compileScala.getSource() + fileTree("./managed-src/") //TODO: get from output instead
  java.util.List<String> additionalImports = new java.util.ArrayList<String>()
  compy.RoutesCompiler routesCompiler = new compy.RoutesCompiler(file("conf/routes"), outputDir, additionalImports, true, true, true)

  routesCompiler.execute()
}

project.gradle.projectsEvaluated { //why? (docs say we should do this?)
  tasks.compileScala.dependsOn(playRoutes)
  tasks.compileScala.dependsOn(playGenerateTemplates)
}

mainClassName = "play.core.server.NettyServer"

//TODO: start in debug mode